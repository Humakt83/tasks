{"version":3,"sources":["api/stations-api.js","components/Status.js","components/Station.js","components/Stations.js","components/details/Arrow.js","components/details/StationDetails.js","App.js","reportWebVitals.js","index.js"],"names":["getStations","a","prefix","axios","get","Status","props","text","available","className","Available","Offline","width","height","viewBox","version","id","stroke","stroke-width","fill","fill-rule","d","opacity","points","Station","history","useHistory","station","onClick","push","station_ID","name","Stations","useState","stations","setStations","useEffect","response","data","loadStations","map","index","Arrow","strokeWidth","fillRule","StationDetails","useParams","setStation","find","st","Number","parseInt","details","Object","entries","filter","val","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.550fb511.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getStations = async (prefix = '') => {\n  return axios.get(prefix + 'res/stations.json');\n};\n\nexport {getStations};","import './Status.scss';\n\nfunction Status(props) {\n\n  const text = props.available ? 'Available' : 'Offline';\n\n  return (\n    <div className=\"status\">\n      {props.available ? <Available /> : <Offline />}\n      {text}\n    </div>\n  );\n}\n\nexport default Status;\n\n\nfunction Available() {\n  return (\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n    <title>D9253D38-322C-469E-8B1B-2ADD6FAA2405@1x</title>\n      <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"icon/available\">\n              <path d=\"M8,1 C4.1,1 1,4.1 1,8 C1,11.9 4.1,15 8,15 C11.9,15 15,11.9 15,8 C15,4.1 11.9,1 8,1 Z M7,11 L4.3,8.3 L5.2,7.5 L7,9.3 L11,5.4 L11.9,6.2 L7,11 Z\" id=\"Fill\" fill=\"#00AD09\"/>\n              <polygon id=\"Inner-Fill\" fill=\"#000000\" opacity=\"0\" points=\"7 11 4.3 8.3 5.2 7.5 7 9.3 11 5.4 11.9 6.2\"/>\n          </g>\n      </g>\n    </svg>\n  )\n}\n\nfunction Offline() {\n  return (\n    <svg width=\"16px\" height=\"16px\" viewBox=\"0 0 16 16\" version=\"1.1\">\n      <title>3ECC254E-2F93-4CF4-AC48-01FFFF26DBA0@1x</title>\n      <g id=\"Symbols\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"icon/offline\">\n              <path d=\"M8,1 C4.1,1 1,4.1 1,8 C1,11.9 4.1,15 8,15 C11.9,15 15,11.9 15,8 C15,4.1 11.9,1 8,1 Z M10.7,11.5 L4.5,5.3 L5.3,4.5 L11.5,10.7 L10.7,11.5 Z\" id=\"Fill\" fill=\"#FF0000\"/>\n              <polygon id=\"Inner-Fill\" fill=\"#000000\" opacity=\"0\" points=\"10.7 11.5 4.5 5.3 5.3 4.5 11.5 10.7\"/>\n          </g>\n      </g>\n    </svg>\n  )\n}","import './Station.scss';\nimport Status from './Status';\nimport {useHistory} from 'react-router-dom';\n\nfunction Station(props) {\n  const history = useHistory();\n\n  const station = props.station;\n\n  return (\n    <div className=\"station\" onClick={() => history.push(`/station/${station.station_ID}`)}>\n      <p>{station.name}</p>\n      <Status available={station.available}/>\n    </div>\n  );\n}\n\nexport default Station;","import {useState, useEffect} from 'react';\nimport './Stations.scss';\nimport {getStations} from '../api/stations-api';\nimport Station from './Station';\n\nfunction Stations() {\n  const [stations, setStations] = useState([]);\n\n  useEffect(() => {\n    const loadStations = async () => {\n      const response = await getStations();\n      setStations(response.data);\n    };\n    loadStations();\n  }, []);\n\n  return (\n    <div className=\"stations\">\n      <h1>Your stations</h1>      \n      <div className=\"stations_list\">\n        {stations.map((station, index) => {\n          return <Station key={index} station={station} />\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Stations;","export default function Arrow() {\n  return (\n    <svg className=\"arrow\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\" version=\"1.1\">\n        <title>1C1ACC89-F131-4CC8-BC10-34A1AFFD024B@1x</title>\n        <g id=\"Symbols\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g id=\"icon/arrow--left\" fill=\"#ffffff\">\n                <polygon id=\"Fill\" points=\"13 26 14.41 24.59 6.83 17 29 17 29 15 6.83 15 14.41 7.41 13 6 3 16\"></polygon>\n            </g>\n        </g>\n    </svg>\n  )\n};","import './StationDetails.scss';\n\nimport {useState, useEffect} from 'react';\nimport {useParams, useHistory} from 'react-router-dom';\nimport {getStations} from '../../api/stations-api';\nimport Arrow from './Arrow';\n\nfunction StationDetails() {\n  const history = useHistory();\n  const { id } = useParams();\n  const [station, setStation] = useState({name: ''});\n\n  useEffect(() => {\n    const loadStations = async () => {\n      const response = await getStations('../');\n      setStation(response.data.find(st => st.station_ID === Number.parseInt(id)));\n    };\n    loadStations();\n  }, [id]);\n\n  const details = Object.entries(station).filter(val => val[0] !== 'name');\n\n  return (\n    <div className=\"details__container\">      \n      <div className=\"details__header\">\n        <div className=\"back\" onClick={() => history.push('/')}>\n          <Arrow />\n        </div>\n        <h1>{station.name}</h1>\n      </div>\n      <div className=\"details\">\n        {details.map((val, index) => {\n          return (\n            <div className=\"detail__item\" key={`detail-${index}`}>\n              <span className=\"label\">{val[0]}</span>\n              <span className=\"value\">{val[1]}</span>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default StationDetails;","\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Stations from './components/Stations';\nimport './App.scss';\nimport StationDetails from './components/details/StationDetails';\n\nfunction App() {\n  return (\n    <Router basename=\"/tasks/javascript/stations/build\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Stations />\n        </Route>\n        <Route path=\"/station/:id\">\n          <StationDetails />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}