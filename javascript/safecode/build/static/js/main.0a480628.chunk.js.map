{"version":3,"sources":["store.js","Lock.js","NumButton.js","NumbersDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["CORRECT_CODE","keySlice","createSlice","name","initialState","locked","numbers","reducers","addNumber","state","action","number","payload","length","console","log","store","configureStore","reducer","actions","Lock","lock","useSelector","id","NumButton","props","dispatch","useDispatch","onClick","Number","NumbersDisplay","numbersDisplay","type","disabled","value","App","map","v","concat","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAEaA,EAAe,OAEtBC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAAc,CACZC,QAAQ,EACRC,QAAS,IAEXC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACjB,IAAMC,EAASD,EAAOE,QACtBH,EAAMH,SAAWK,EACbF,EAAMH,QAAQO,QAAU,GAC1BJ,EAAMJ,OAASI,EAAMH,UAAYN,EACjCS,EAAMH,QAAU,IAEhBG,EAAMJ,QAAS,EAEjBS,QAAQC,IAAIN,EAAMJ,YAKXW,EAAQC,YAAe,CAClCC,QAASjB,EAASiB,UAGLV,EAAcP,EAASkB,QAAvBX,UAEFH,EAAS,SAAAI,GAAK,OAAIA,EAAMJ,QACxBC,EAAU,SAAAG,GAAK,OAAIA,EAAMH,SCjBvBc,MAXf,WAEE,IAAMC,EAAOC,YAAYjB,GAEzB,OACE,qBAAKkB,GAAG,OAAR,SACGF,EAAO,eAAO,kB,MCING,MAVf,SAAmBC,GACjB,IAAMC,EAAWC,cACXhB,EAASc,EAAMd,OACrB,OACE,wBAAQY,GAAI,OAASZ,EAAQiB,QAAS,kBAAMF,EAASlB,EAAUqB,OAAOlB,MAAtE,SACGA,KCOQmB,MAZf,WAEE,IAAMC,EAAiBT,YAAYhB,GAEnC,OACE,gCACE,iDAAoBN,EAApB,OACA,uBAAOgC,KAAK,OAAOC,UAAQ,EAACC,MAAOH,QCQ1BI,MAdf,WACE,IAAM7B,EAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAChC8B,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAW1B,OAAQ0B,GAAQ,OAASA,MAC/CC,OAAO,cAAC,EAAD,GAAU,SACpB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SACGjC,QCDMkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJoC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a480628.chunk.js","sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nexport const CORRECT_CODE = '1234';\n\nconst keySlice = createSlice({\n  name: 'key',\n  initialState: {\n    locked: true,\n    numbers: '',\n  },\n  reducers: {\n    addNumber: (state, action) => {      \n      const number = action.payload;\n      state.numbers += number;\n      if (state.numbers.length >= 4) {        \n        state.locked = state.numbers !== CORRECT_CODE;\n        state.numbers = '';\n      } else {\n        state.locked = true;\n      }\n      console.log(state.locked);\n    }\n  }\n})\n\nexport const store = configureStore({\n  reducer: keySlice.reducer\n})\n\nexport const { addNumber } = keySlice.actions;\n\nexport const locked = state => state.locked;\nexport const numbers = state => state.numbers;\n","import './Lock.scss';\nimport { useSelector } from 'react-redux';\nimport { locked } from './store';\n\nfunction Lock() {\n\n  const lock = useSelector(locked);\n\n  return (\n    <div id=\"lock\">\n      {lock ? 'ðŸ”’' : 'ðŸ”“'}\n    </div>\n  );\n}\n\nexport default Lock;\n","import './NumButton.scss';\nimport { useDispatch } from 'react-redux';\nimport {addNumber} from './store';\n\nfunction NumButton(props) {\n  const dispatch = useDispatch();\n  const number = props.number;\n  return (\n    <button id={'key-' + number} onClick={() => dispatch(addNumber(Number(number)))}>\n      {number}\n    </button>\n  );\n}\n\nexport default NumButton;\n","import './Lock.scss';\nimport { useSelector } from 'react-redux';\nimport { numbers, CORRECT_CODE } from './store';\n\nfunction NumbersDisplay() {\n\n  const numbersDisplay = useSelector(numbers);\n\n  return (\n    <div>\n      <p>Correct code is {CORRECT_CODE}.</p>\n      <input type=\"text\" disabled value={numbersDisplay} />\n    </div>\n  );\n}\n\nexport default NumbersDisplay;\n","import './App.scss';\nimport Lock from './Lock';\nimport NumButton from './NumButton';\nimport NumbersDisplay from './NumbersDisplay';\n\nfunction App() {\n  const numbers = [1,2,3,4,5,6,7,8,9,0]\n    .map((v) => <NumButton number={v} key={'key-' + v}/>)\n    .concat(<Lock key=\"lock\"/>);\n  return (\n    <div className=\"App\">\n      <NumbersDisplay />\n      <div className=\"numgrid\">\n        {numbers}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}